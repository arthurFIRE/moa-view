{"version":3,"sources":["pages/setup.tsx","pages/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Setup","Home","birthday","Date","plusTime","getTime","dPlusDay","Math","floor","dPlusWeek","dPlusMonth","dPlusDayOfWeek","milkString","localStorage","getItem","useState","JSON","parse","milkList","setMilkList","setMilk","newMilkList","setItem","stringify","style","color","marginBottom","float","marginLeft","marginRight","marginTop","type","width","onClick","toISOString","addMilk","map","milk","moment","format","src","App","className","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"qOAMeA,EAJS,WACtB,OAAO,wC,iCC2EMC,EA3EQ,WACrB,IAAMC,EAAW,IAAIC,KAAK,KAAM,EAAG,IAE7BC,GADQ,IAAID,MACKE,UAAYH,EAASG,UAEtCC,EAAWC,KAAKC,MAAMJ,EAAQ,OAA4B,EAC1DK,EAAYF,KAAKC,MAAMJ,EAAQ,QAC/BM,EAAaH,KAAKC,MAAMJ,EAAQ,QAChCO,EAAiBJ,KAAKC,MACzBJ,EAAQ,OAAT,OAGIQ,EAAaC,aAAaC,QAAQ,QAZb,EAaKC,mBAC9BC,KAAKC,MAAML,GAAc,OAdA,mBAapBM,EAboB,KAaVC,EAbU,KA2BrBC,EAAU,SAACC,GACfF,EAAYE,GACZR,aAAaS,QAAQ,OAAQN,KAAKO,UAAUF,KAG9C,OACE,sBAAKG,MAAO,CAAEC,MAAO,aAArB,UACE,qBAAID,MAAO,CAAEE,aAAc,GAA3B,yDAA0CpB,EAA1C,YACA,oCACIG,EADJ,SACgBE,EADhB,WACmCD,EADnC,mBAGA,gCACE,oBAAIc,MAAO,CAAEG,MAAO,OAAQC,WAAY,IAAxC,4BACA,sBAAKJ,MAAO,CAAEG,MAAO,QAASE,YAAa,GAAIC,UAAW,IAA1D,UACE,wBACEC,KAAK,SACLP,MAAO,CAAEQ,MAAO,KAChBC,QAAS,YA3BH,WACd,IAAMZ,EAAW,EAAI,IAAIlB,MAAO+B,eAAf,mBAAiChB,IAClDE,EAAQC,GA0BEc,IAJJ,0BASA,wBACEJ,KAAK,SACLP,MAAO,CAAEI,WAAY,GAAII,MAAO,KAChCC,QAAS,WA7BjBb,EADmC,KA2B7B,gCAWJ,qBAAKI,MAAO,CAAEM,UAAW,IAAzB,SACE,6BACGZ,EAASkB,KAAI,SAACC,GAAD,OACZ,6BAAKC,IAAOD,GAAME,OAAO,6BAI/B,8BACE,qBAAKP,MAAO,IAAKQ,IAAI,qBCrDdC,MAbf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,kBAAM,cAAC,EAAD,OACpC,cAAC,IAAD,CAAOD,KAAK,SAASC,OAAQ,kBAAM,cAAC,EAAD,eCE9BC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASV,OACP,cAAC,IAAMW,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.86a35462.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Setup: React.FC = () => {\n  return <h1>Setup</h1>;\n};\n\nexport default Setup;\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\n\nconst Home: React.FC = () => {\n  const birthday = new Date(2021, 6, 23);\n  const today = new Date();\n  const plusTime = today.getTime() - birthday.getTime();\n\n  const dPlusDay = Math.floor(plusTime / (1000 * 60 * 60 * 24)) + 1;\n  const dPlusWeek = Math.floor(plusTime / (1000 * 60 * 60 * 24 * 7));\n  const dPlusMonth = Math.floor(plusTime / (1000 * 60 * 60 * 24 * 30));\n  const dPlusDayOfWeek = Math.floor(\n    (plusTime % (1000 * 60 * 60 * 24 * 7)) / (1000 * 60 * 60 * 24)\n  );\n\n  const milkString = localStorage.getItem(\"milk\");\n  const [milkList, setMilkList] = useState<Array<string>>(\n    JSON.parse(milkString || \"[]\")\n  );\n\n  const addMilk = () => {\n    const newMilkList = [new Date().toISOString(), ...milkList];\n    setMilk(newMilkList);\n  };\n\n  const resetMilk = () => {\n    const newMilkList: Array<string> = [];\n    setMilk(newMilkList);\n  };\n\n  const setMilk = (newMilkList: Array<string>) => {\n    setMilkList(newMilkList);\n    localStorage.setItem(\"milk\", JSON.stringify(newMilkList));\n  };\n\n  return (\n    <div style={{ color: \"cadetblue\" }}>\n      <h2 style={{ marginBottom: 0 }}>아영이 태어난지 {dPlusDay}일</h2>\n      <div>\n        ({dPlusWeek}주{dPlusDayOfWeek}일, {dPlusMonth}개월)\n      </div>\n      <div>\n        <h3 style={{ float: \"left\", marginLeft: 15 }}>* 분유</h3>\n        <div style={{ float: \"right\", marginRight: 15, marginTop: 18 }}>\n          <button\n            type=\"button\"\n            style={{ width: 100 }}\n            onClick={() => {\n              addMilk();\n            }}\n          >\n            시작\n          </button>\n          <button\n            type=\"button\"\n            style={{ marginLeft: 10, width: 100 }}\n            onClick={() => {\n              resetMilk();\n            }}\n          >\n            리셋\n          </button>\n        </div>\n      </div>\n      <div style={{ marginTop: 70 }}>\n        <ul>\n          {milkList.map((milk) => (\n            <li>{moment(milk).format(\"YYYY-MM-DD HH:mm\")}</li>\n          ))}\n        </ul>\n      </div>\n      <div>\n        <img width={300} src=\"/azero.jpg\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Setup from \"./pages/setup\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route path=\"/setup\" render={() => <Setup />} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}