{"version":3,"sources":["pages/setup.tsx","components/Top.tsx","components/Popup.tsx","components/MilkPopup.tsx","components/MilkList.tsx","components/SleepList.tsx","pages/home.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Setup","Top","birthday","Date","plusTime","getTime","dPlusDay","Math","floor","dPlusWeek","dPlusMonth","dPlusDayOfWeek","style","marginBottom","Popup","children","className","MilkPopup","callback","inputRef","useRef","ref","type","marginLeft","onClick","console","log","Number","current","value","undefined","onClickHandler","MilkList","useState","milkPopup","setMilkPopup","milkString","localStorage","getItem","JSON","parse","milkList","setMilkList","setMilk","newMilkList","setItem","stringify","openMilkPopup","idx","amount","map","milk","index","saveAmount","float","marginRight","marginTop","width","startDate","toISOString","addMilk","paddingTop","moment","format","SleepList","sleepString","sleepList","setSleepList","setSleep","newSleepList","addSleep","sleepTime","Home","color","src","alt","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.08fb971f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Setup: React.FC = () => {\n  return <h1>Setup</h1>;\n};\n\nexport default Setup;\n","import React from \"react\";\n\nconst Top: React.FC = () => {\n  const birthday = new Date(2021, 6, 23);\n  const today = new Date();\n  const plusTime = today.getTime() - birthday.getTime();\n\n  const dPlusDay = Math.floor(plusTime / (1000 * 60 * 60 * 24)) + 1;\n  const dPlusWeek = Math.floor(plusTime / (1000 * 60 * 60 * 24 * 7));\n  const dPlusMonth = Math.floor(plusTime / (1000 * 60 * 60 * 24 * 30));\n  const dPlusDayOfWeek = Math.floor(\n    (plusTime % (1000 * 60 * 60 * 24 * 7)) / (1000 * 60 * 60 * 24)\n  );\n\n  return (\n    <>\n      <h2 style={{ marginBottom: 0 }}>아영이 태어난지 {dPlusDay}일</h2>\n      <div>\n        ({dPlusWeek}주{dPlusDayOfWeek}일, {dPlusMonth}개월)\n      </div>\n    </>\n  );\n};\n\nexport default Top;\n","import React from \"react\";\n\nexport interface PopupProps {\n  children: JSX.Element;\n}\n\nconst Popup: React.FC<PopupProps> = ({ children }: PopupProps) => {\n  return (\n    <>\n      <div className=\"popup-content\">{children}</div>\n\n      <div className=\"dim-layer\">\n        <div className=\"dimBg\"></div>\n      </div>\n    </>\n  );\n};\n\nexport default Popup;\n","import React, { useRef } from \"react\";\nimport Popup from \"./Popup\";\n\ninterface MilkPopup {\n  callback: (amount?: number) => void;\n}\n\nconst MilkPopup: React.FC<MilkPopup> = ({ callback }: MilkPopup) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const onClickHandler = () => {\n    console.log(\n      \"Number(inputRef?.current.value)\",\n      Number(inputRef?.current?.value)\n    );\n    callback(\n      inputRef?.current?.value ? Number(inputRef?.current?.value) : undefined\n    );\n  };\n  return (\n    <Popup>\n      <div>\n        <div>\n          <input ref={inputRef} type=\"number\" /> ml\n          <button\n            type=\"button\"\n            style={{ marginLeft: 10 }}\n            onClick={() => onClickHandler()}\n          >\n            Save\n          </button>\n        </div>\n      </div>\n    </Popup>\n  );\n};\n\nexport default MilkPopup;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\nimport MilkPopup from \"./MilkPopup\";\n\ninterface Milk {\n  startDate: string;\n  amount?: number;\n}\n\nconst MilkList: React.FC = () => {\n  const [milkPopup, setMilkPopup] = useState<React.ReactNode | undefined>();\n\n  const milkString = localStorage.getItem(\"milk\");\n  const [milkList, setMilkList] = useState<Array<Milk>>(\n    JSON.parse(milkString || \"[]\")\n  );\n\n  const addMilk = () => {\n    const newMilkList = [{ startDate: new Date().toISOString() }, ...milkList];\n    setMilk(newMilkList);\n  };\n\n  const resetMilk = () => {\n    const newMilkList: Array<Milk> = [];\n    setMilk(newMilkList);\n  };\n\n  const setMilk = (newMilkList: Array<Milk>) => {\n    setMilkList(newMilkList);\n    localStorage.setItem(\"milk\", JSON.stringify(newMilkList));\n  };\n\n  const saveAmount = (idx: number, amount: number) => {\n    console.log(\"amount : \", amount);\n    var newMilkList = milkList.map((milk, index) =>\n      index === idx ? { ...milk, amount: amount } : milk\n    );\n\n    setMilk(newMilkList);\n  };\n\n  function openMilkPopup(idx: number) {\n    console.log(\"idx \", idx);\n    setMilkPopup(\n      <MilkPopup\n        callback={(amount) => {\n          setMilkPopup(undefined);\n          amount && saveAmount(idx, amount);\n        }}\n      />\n    );\n  }\n\n  return (\n    <div>\n      {milkPopup}\n      <div>\n        <h3 style={{ float: \"left\", marginLeft: 15 }}>* 분유</h3>\n        <div style={{ float: \"right\", marginRight: 15, marginTop: 18 }}>\n          <button\n            type=\"button\"\n            style={{ width: 100 }}\n            onClick={() => {\n              addMilk();\n            }}\n          >\n            시작\n          </button>\n          <button\n            type=\"button\"\n            style={{ marginLeft: 10, width: 100 }}\n            onClick={() => {\n              resetMilk();\n            }}\n          >\n            리셋\n          </button>\n        </div>\n      </div>\n      <div style={{ paddingTop: 50 }}>\n        <ul>\n          {milkList.map((milk, idx) => (\n            <li key={idx} onClick={() => openMilkPopup(idx)}>\n              {moment(milk.startDate).format(\"YYYY-MM-DD HH:mm\")} :{\" \"}\n              {milk.amount && `${milk.amount}ml`}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default MilkList;\n","import moment from \"moment\";\nimport React, { useState } from \"react\";\n\nconst SleepList: React.FC = () => {\n  const sleepString = localStorage.getItem(\"sleep\");\n  const [sleepList, setSleepList] = useState<Array<string>>(\n    JSON.parse(sleepString || \"[]\")\n  );\n\n  const addSleep = () => {\n    const newSleepList = [new Date().toISOString(), ...sleepList];\n    setSleep(newSleepList);\n  };\n\n  const resetSleep = () => {\n    const newSleepList: Array<string> = [];\n    setSleep(newSleepList);\n  };\n\n  const setSleep = (newSleepList: Array<string>) => {\n    setSleepList(newSleepList);\n    localStorage.setItem(\"sleep\", JSON.stringify(newSleepList));\n  };\n\n  return (\n    <div>\n      <div>\n        <h3 style={{ float: \"left\", marginLeft: 15 }}>* 수면</h3>\n        <div style={{ float: \"right\", marginRight: 15, marginTop: 18 }}>\n          <button\n            type=\"button\"\n            style={{ width: 100 }}\n            onClick={() => {\n              addSleep();\n            }}\n          >\n            시작\n          </button>\n          <button\n            type=\"button\"\n            style={{ marginLeft: 10, width: 100 }}\n            onClick={() => {\n              resetSleep();\n            }}\n          >\n            리셋\n          </button>\n        </div>\n      </div>\n      <div style={{ paddingTop: 50 }}>\n        <ul>\n          {sleepList.map((sleepTime, idx) => (\n            <li key={idx}>{moment(sleepTime).format(\"YYYY-MM-DD HH:mm\")}</li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default SleepList;\n","import React from \"react\";\nimport Top from \"../components/Top\";\nimport MilkList from \"../components/MilkList\";\nimport SleepList from \"../components/SleepList\";\nimport \"../components/styles.css\";\n\nconst Home: React.FC = () => {\n  return (\n    <div style={{ color: \"cadetblue\" }}>\n      <Top />\n      <MilkList />\n      <SleepList />\n      <div>\n        <img width={300} src=\"/azero.jpg\" alt=\"azero\" />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Setup from \"./pages/setup\";\nimport Home from \"./pages/home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/\" render={() => <Home />} />\n          <Route path=\"/setup\" render={() => <Setup />} />\n        </Switch>\n      </HashRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}